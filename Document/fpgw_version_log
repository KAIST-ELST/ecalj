=== Version log of fpgw ====

sep2013
test version of all diagonal elements
(emax_sigm_d)

Sep2013 (CMD23)
  We start to organize ecalj/Documents/.

---
Aug2013
  We now fix default ctrl as
      SIGP[MODE=3 EMAX=9999.0].
  And ESEAVR is meaningless (0.0 is included).
  Thus we now avoid complicated interpolation scheme because of 
  MTO-based expansion of sigm.
---
Aug2013
Anisotropy is treated in a better manner.
Band,DOS,PDOS plots are easier.
Speed up.
New tests are added.
local orbitals can be at higher than valence.
Test is at TestInstall/

---
13sep2012
* PMT-QSGW works (not tested systematically yet). \Sigma-Vxc (sigm) is expanded only in MTOs.
* fp/mkrout.F  mkrou3 full-charge of qbyl hbyl are returned (add qz and hz). 
  "symmetrized l-charge qbyl, hbyl and ebar" are explicitly shown. 
  Add message to fp/pnunew.F

---
4thAug2012
  *eps mode (eps, epsPP_lmfh) and gwsc, gw_lmfh work. (TESTinstallGW) testgw.py

  *Full use of crystal symmetry for hx0fp0. Reduced number of
   eigenfunctions are required.

  *Previous Offset-Gammma method is changed.
   Anisotropy is treated is treated well.  
   Any Q0P (it can be small enough as long as without numerical
   problems) is OK.  Q0P is determined by
   deltaq_scale=.1d0 in mkqg.F (change this to 0.01 and observe output
   of qg4gw). 

  *Miyake's MaxLocWannier need to be fixed.
  *Total energy mode need to be fixed.


---
18Nov2009

Still developing QSGW on PMT version.
interpolation with PW do not work well yet.

Go through testgw.py for fpgw, and make check for lmf.
Need to change subs/newsigmaswitch.F for new sigma-interpolation (developing).


30April 2009
temporary version. with lmv7.
It reproduced old TESTintall (for fe_chipm I saw slight
difference. But I have not checked it in detail).

Note: Check whether SIGP[...] is readin well or not. lmv7 requies new format.
1. norm check. It is almost OK. But not perfect enough when we use
  large pwemax as 8Ry or so.
  Even when we use large HAM_GMAX, and HAM_TOL, no improvement.

2. In a case gas_pwecase2_gw_lmfh, lsc_sc causes segmentation fault
   --> ulimit -s unlmited..


08Sep 2008
fpgw033a4 packed

July9 2008
 hchknw.m.f:
      if(ixc/=1) close(ifqpnt) !Walter fixed this Jul2008
 is recovered. Walter.L reported.

June25 2008 ---
fpgw033a3 packed


June25. test in waldo
 Special care for the compilar: 
 variable declear ordering (e.g integer nx; real(8):: aaa(nx). nx first decleared).


June25 2008----------
I found a bug on omd (when I compiled it on waldo).
In subrouine, 
      complex(8) function wintz_npm(npm,v,v0,x,wt,a,expa,we,
     d                                nx)
I found 
          omd   = 1d0/x(i) - 1d0 !this was missing. I added this at 25June2008
      is missing. 
This may affct to the case with core included (core2 case and NoTimeReversal symmetry).

June25 ---
   hx0fp0.m.f: schi it not set. It is used in dpsion5. So need to set(but meainingful only chipm mode).
  

June14--------
   Definition of Mix0vec.
   hvccfp0 (remove dnorm). dnorm is not unity now.
   hx0fp0 is also corrected.
   So, now atomic part of Mix0vec is not dependent on QpGcut_cou.
   dnorm is dependent on it.

   <eiqr|m> (written in ChiPM mode) is corrected now.
   No changes for ChiPM* and EPS* results from previous versions.

Try to follow this rule.
C --- subrouine variables. but not perfect yet. In future, we need to make it automatic
C    i input
C    o output
C    m input and output
C
Cr comment rule
Cr C --- Chapter 
Cr C ... section
Cr ! note for what it is
Cr c Commnetout a line (this can be memo for development).
C-------------------------------------------------


June14 2008 033a2--------------


June 11-------
      x0kf_v4h:
          sum(abs(qu1-qu1x))>1d-10  --->
          if(sum(abs(qu1-qu1x))>tolqu) then 
       Here tolqu=1d-4. larger tolelance --- this makes stop when we treat low symmetry material
       (rhombohedral).
      
     rangedq: tolq2 = 1d-6 ---> 1d-4

     !!! These procedure might be a temporary fix.
     At first, we need to use "accurate plat in ctrl file".

June 11------
     bansfp.F I now use charnum3n
     This support filename as rhomt.10, rhomt.112 and so.
     (previous version allow only ibas<10)


May14 bug fix-------
      sxcf_fal2.sc.F L 1457
        deallocate(zmel,zmel1,zmel1_,zw,freq_r) !zw4,
          --->
        deallocate(zmel,zmel1,zmel1_,zw,freq_r,zwzs) !zw4,


Apr15 Clean up hx0fp0.m.F------
      Removed Stoner sections and so on.
      Now chipm mode generate ChiPM*.nlf.mat (mode222 and 223) 
      and ChiPM*.fmat(mode223 only).
      Use utility routines (and scripts) in ecal/util
        calj_interp_mat.F, calj_nlfc_mat.F
        calj_nlfc_metal   calj_summary_mat

       rdata4gw_v2: 
        L1699 allocate(ppovl(ngc,ngc),ppovlinv(ngc,ngc)) 
       is moved to next to "if(ngc==0) cycle", because of "already allocated error
       when ngc=0".

       hx0fp0: no deallocation for consvec. Add deallocate(consvec).


Apr9,08 indentation. Used tool is "fpgw/Findent (need findent and redo)".


Apr7,08 hsfp0.sc.m.F 1122, hx0fp0.sc.m.F 1005
        allocate(ecore(1,1)) --->allocate(ecore(1,2))
        (this stops code, only when you use comiler option
         which check upper and lower bounds; but this is dummy array,
         so, no problem).


fpgw032i17 30jan2008------
A while ago, I modified "make procedure".
You first have to do "make init"---> it generates moduledependes.inc.
(No time-consuming checkmodule now.)


basnfp.F: bug fix ---> pgf90 did not give complaint.
      deallocate(rprodx,iprlc,lprc)
 2001 continue 

Any CLASS setting works. (no ordering is requied. It can be skipped.)


29jan2008: 
 rdata4gw_v2. iclass check is removed. 


Jan2008
Now works even for 1 1 1.
Why 1 1 1 fails? ---> check write of intttvc6. pvn=0 --->integtetn;  ee=<ee(1) is wrong.
  --- intttvc6: e= 0.5022263911818281D+00 0.5022263911818281D+00 0.5022263911818281D+00 0.5022263911818281D+00
  norm voltet pvn=  0.000000D+00  0.666667D+00           Inf
-------------------
  This means if all four energies e1 are the same (also for e2) for 1/(w -(e1 -e2)),
  pvn gives Inf....  --->integtetn
      subroutine integtetn(e, ee, integb)
      if    ( ee<e(1) ) then  !jan2008 ee<=e(1) ---> ee<e(1)
========================================




Jan2008
    echo 22|hsfp0 : img only mode. ---> this is removed because

Jan2008 hsfp0.F
    I don't think this is nesssary now... takao.
    if(esmr<1d-5) shtw=0.01d0 ! Ferdi's shift to avoid resonance effect(maybe)

Jan 2008
 sxcf_fal2.F   alagr3z --->alagr3zz. Only for 1shot mode.
 This gives better Im part (especially, when it is very small).
 quadratic approximation is completery safe?



--- Memo for SEComg.UP ------------------------------------------
The spectrum function (diagonal part) is
Im G(\omega) = Im[ 1/X(\omega) }, where
X(\omega) = (\omega - eQP + ReS(\omega) -ReS(eQP) ) +  i * ImS(\omega)

Here real part must be zero if \omega= eQP. eQP is the eigenvalue of H0 in QSGW,
but  eQP = eLDA + dSE (or dSEnoZ) for one-shot case.
SEComg.* contains, e.g.,
*  $9 (9th colmn):  omega-ef in eV.
*  $10 $11       :  real and img part of self-energy in eV.
*  $8            :  eigenvalue by H0 in eV  (relative to Ef).
------------------------------------------------------------------



032i15 Oct.5 2007 Easy plot of spectrum function ----------------
  * util/dossig3.F
   How to plot spectrum function?
   (1) Set GWinput.
   (2) gw_spectrum 
       This generate SEComg.UP 
   (3) echo UP|dossig_scgw.
       This makes, e.g. SEComg_ib005_ip001 and so.
==================
 omega - e   :   "SEComg_ib005_ip001"  using ($1):($2) with l, \        
 Re(Sigma(omega))-Re(Sigma(e)):
                 "SEComg_ib005_ip001"  using ($1):($3) with l, \
 |Im(Sigma)| :   "SEComg_ib005_ip001"  using ($1):(abs($4)) with l, \
 A(omega)    :   "SEComg_ib005_ip001"  using ($1):(abs($4))/(($2-$3)**2+($4)**2+0.01) with l
==================
    (4)  chmod +x SEComg_ib005_ip001.UP.gp
         ./SEComg_ib005_ip001.UP.gp

----------------
sep 28 2007
   Bug for one-shot SO=2 mode.
     sxcf_fal2.F sxcf_fal3z:  I used alagr3 (it was decleared as real, with complex(8) into fi).


------------------------------------------
Mark reported a strange behevior ---it stoped with 'hsfp0 ixc=3:  ecore>evalence '
    This was traced back to the wrong nnc in GWinput 
    (probably it was modified by hand---it is dangeous).
    <PRODUCT_BASIS> section is problematic.


----------------------------------------------
GW did not work when
[takao@saguaro2 cuvac]$ cat CLASS
   1   1
   2   2
   3   4
   4   3
   5   3
   6   3
   7   3
This is not allowed. In rdata4gw, I now have --------
c class check ; Jun2006
        icold=0
        do ibas = 1,nclass
          ic   = iclass(ibas)
          if(ic >icold+1) stop 'radata4gw: Strange CLASS!'
          icold= ic
        enddo


----------------------------------------
June 12
 sanity check error occurs when we have poor symmtry 
 (allowance of symmetry checker may be tighter than lmf).
        stop 'nkstar: can not find irotk some bug exits!'
  ---> Use accurate symmetry in ctrl file! I replaced sentence as
        stop'bzmesh: not find irotk; it may require accurate symmetry.'
  Allowance is from 1d-7 to 1d-6
          if(sum(abs(diff2))< 1d-6) then

--------------------------------
June 3 
   Find a bug in 032i9 !!!
   I found nmbas bug in thid version 
       allocate( rcxqmean(nwhis,npm,nmbas,nmbas))
-------- no nmbas is defined in no chipm mode. this must be
       nmbas_in=1
       allocate( rcxqmean(nwhis,npm,nmbas_in,nmbas_in))


-------------------------
June29
calj_nlfc_mat
calj_interp_mat
     Use Ua(omega) instead of Ua^0+omega*Ua^1.
     But result changes little.



Jun26 the initial propmt was wrong ----
xxx      
  COREECT is xxx      
      write(6,"(a)") '    202 : epsNoLFC  Sergey'
      write(6,"(a)") '    203 : eps       Sergey'

032i13dev: June2007
  ANFcond hqpe_sc: Change format of ldima, which is generated by echo 0|lmfgw,
  so that it is compatile with floating orbitals.
  (For FeO case, but not well tested yet...)

032i12
  Spin wave part. I now think only nlfc is meaningful 
  (without nlfc is a kind of unbalanced procedure, expensive but not so great);
  Anyway I now add omega-dependent correction so as to satisfy the sum rule for the moment
  (derivative at q=0 omega=0 must be the same as the static moment).

032i9 
   I found nmbas bug in thid version 
       allocate( rcxqmean(nwhis,npm,nmbas,nmbas))

       nmbas_in=1
       allocate( rcxqmean(nwhis,npm,nmbas_in,nmbas_in))



April 2007
A little Bug... This is not a problem as far as nwhis+1
   When omg_c is too small.
   nwhis = nw occurs in hx0fp0. Because of 
        do iw=3,nw2-1  loop at L709.
Use larger omg_c fow a while...


Jan 2007.
032i7dev.
    For spin waver for nolfc, it uses <1|chi_0|1>. A little modified formalism.
    Better frequency spectrum (smaller at high energy).



Jan 2007.
032i7 version.
    spin wave OK. For nolfc, it uses <m|chi_0|m>.




9-Nove-2006 
     spin wave part analysis for NiO. modified mmorm parts (just scaling).
     projection test (prtest in hx0fp0).
       In MnO, Takao found that the difference of Im chi for ChiPM*.nolfc.dat and ChiPM*.dat
       are due to projection operator just aside of e^iqr.
         1/(1-I\chi) = \chi + \chi I \chi + \chi I \chi I \chi + ...
       are almost similar with
         \approx \chi + \chi I P \chi + \chi I P \chi I P \chi + ...
       Here I is stoner I (delta function like), and P is the projecion operator to spin density. See sproj in hx0fp0.
       Thus  <eiqr| P 1/(1-I\chi) P |eiqr>  is similar with <eiqr| P 1/(1-IP \chi) P |eiqr> (nolfc case).
       But <eiqr| P 1/(1-I\chi) P |eiqr> is very different from <eiqr| 1/(1-I\chi)  |eiqr>.
     See prtest in hx0fp0.


20oct2006
      subroutine x0kf_v4hz (npm,ncc,
      complex(8)   :: zq0zq0 !This is a bug for the case of two atoms per cell!!! oct2006 fixed.

15-OCT2006
I add
      logical function is_mix0vec()
!is_mis0vec=0 is original version. But it caused a problem at BZ bounday.
      is_mix0vec=1 
      end


032i6dev 15oct2006-------------
  spin susceptibility part is renewed.
  Now <eiqr|chi |eiqr> is calculated.
  Previous version of eps_lmfh_chipm mode was problematic.



=== Exit -1 rdsigm: Bloch sum deviates more than allowed tolerance (tol=5e-6) ===
Takao,

> when I do Ni 101010, I got
>  hft2rs created hrs:  ndhrs=39  max Re(hrs) = 0.771  max Im(hrs) = 2.33e-9
>    i   j      diff              bloch sum                file value
>   21   1    0.000174     -0.036707    0.000000     -0.036533    0.000000
>  Exit -1 rdsigm: Bloch sum deviates more than allowed tolerance (tol=5e-6)
> What is this mean? or how to avoid the problem?

It almost always means that the range set up for the r.s. Bloch sigma
is not long enough to encompass all possible connecting vectors.  The
easiest way to fix it is to increase the range.  You need to add to
the HAM category something like

HAM   RSRNGE=8

RSRNGE is in units of alat.

In the output, look for where the sigma is read in.  You will see
something like this output

 RDSIGM: read file sigm and create COMPLEX sigma(R) by FT ...
         Sigm will be approximated by:  diagonal Sigma for high and low states 
         Approximate sigma for energies E(lda)>2.5
         For high states Sigii = 0.000 + 0.080 * E(lda) 
         Linear fit to diagonal sigma for E(lda)>0 and E(lda)<2.5 
         sigm file has 20 irreducible QP: nk = ( 4 4 4 )  shift= F F F
 hft2rs: make neighbor table for r.s. hamiltonian using range = 5 * alat
 pairc:   8278 pairs total 4139 is max cluster size
 hft2rs: found 256 connecting vectors out of 256 possible for FFT

range = 5 * alat means that RSRNGE=5 (default value).  If RSRNGE is
large enough, this line

 hft2rs: found 256 connecting vectors out of 256 possible for FFT

indicates that all possible connecting vectors were found (as they are
in this example); then you should have no problem.

Mark
=================================================================================




Oct 13
    gbvec q=0 is given as q=(1d-6,0,0) in hvccfp0
    Start rebuild spin wave mode 

Sep 19th
    Correct hx0fp0 ---> nolfc case for LFC mode.

x0kf_v4hz: for rcxqmean(nwt,npm, nmbas,nmbas)

Add new function to keyvalue.f. See hx0fp0.m.f 
      istat=-9999 ! don't assume nmbas = readin number
      call getkeyvalue("GWinput","MagAtom", 
     &        imbas,nmbas,status=istat)
      "istat=-9999" returns number of readin arguments into istat.

Include Miyake's maxloc.
    But be carufel. You have to compile Miyake/maxloc* after others are compiled---checkmodule do not check it.
    * readeigen.F
      complex(8):: cphif(ldim2_in,*) ---> cphif(ldim2_in,nwf)
      was necessary. Maybe compilar bug.


032i5_dev -------------
hqpe.sc.m.f
      12Aug2006
        evec0ex=.false. !true before 12Aug2006 ---> but it caused a problem maybe because of degeneracy.



032i4 27June2006 Build -------------
      nword() is automatic 
      inquire(iolength=len) r
      nword = 8/len
      ! So now we don't need to care NWORD. 
        (NWORD=4 for ifc8.0, NWORD=1 for ifc7; now forget this.).

INSTALL memo
      slatsm.tar.gz  (including patch 44* 45-* in saguaro).
      configure worked. libfftw.a 
      Link ordering! slatsm libfftw

-----------procedure ------------
      slatsm
       env FC=pgf90 CC=pgcc ./configure 
      lm
       env FC=pgf90 CC=pgcc ./configure --enable-gw --enable-fp
       Edit Makefile as
         LIBLOC= $(HOME)/ecal/libfftw.a -llapack -lblas
       Make init
       Make all
       make ~/bin
       make install


      fpgw/exec
       Edit make.inc LIIBLOC= $(HOME)/ecal/libfftw.a -llapack -lblas
        ./checkmodule
        make
        make install   (copy binaries to ~/bin)
        make install2  (copy script to ~/bin)


       env FC=pgf90 CC=pgcc LIBSLA=/home/takao/ecal/slatsm/slatsm.a LIBLOC='-llapack -lblas' ./configure

032i3 05June2006 Build -------------
  July2006 ewidthcut for weavx2.f
      real(8):: ewidthcut=1d-6
      if(eh-el< ewidthcut) then !July2006
         wfacx2=0d0
         return
      endif
     ----These are to avoid meaningless stop (when wfacx2 is too small,
          weavx can stop at weavx2:err because of numerical poorness.



---CLASS file bug.
   Mark says there is a bug in the generation of CLASS file when we use floating orbital 
   (empty sphere with zero MT radius).
   Mark says
   ---C, Si, Ge requires special cases when a shear is introduced. 



sxcf_fal2.F
< c        allocate( zw2 (nblochpmx,nblochpmx) )
< c      if (allocated(zw2)) deallocate(zw2)

wintzsg.F 
384c384
<       complex(8) ::v(nx),v0,sum,img=(0d0,1d0),wintz
<       wintz_npm= wintz
<       complex(8) :: fi(3) ,alagr3z
<       alagr3z_even=alagr3z



032i2 05June2006 Build -------------
  03June2006
  gwsc_ex  is added (modified from gwsc_exonly).
  Now this script do sc calculation with
       wex*(\Sigma_x(core+val) - VXCLDA ) +VXCLDA
  Here wex is given in EXonly is GWinput.
  So EXonly 1.0 gives HF calculation.
  Change hqpe.sc.m.F so that gwsc_ex.
     [NOTE:  gwsc_exolny ---> this was wex*(Sigma_ex(val)) + VXCLDA
      No SEXcore calculation...]
     hsfp0.sc.m.F
        move ecore --->ecore-100 when Exonly is not zero.
        (this is to avoid a sanity check "eval>ecore").

  31May2006  rgwinf_mod.F 
  (bugfiexed at 03June: c(n)--->c(i) in ibitand)
        call ibitand(nl*nnv*nclass, unoccv,occv, ooo)
        unoccv = ooo
        This takes (occv and unoccv) to generate product basis for core exchange.
        


032i1  Build 25May2006" -------------------
      * TimeReversal off is implimented.
          However, it gives only 0.27 orbital moment for CoO.
          (this should be about 1.0---So it is too small)
        I don't know why it is so small.
        Im-axis integration in wintzsg_npm gives rather large effects.
        (asymmetry in W gives strong effects...).
        Why it is so?


032h9 25May2006 --------------------
      add evaltest() (this is a switch fiexed in switch.F).
      to test eigenvalues of W.

  20May2006
      *  bugifx in wintz_npm 
          if(npm==2) then 
            sum  = sum - cons* v(i+nx)*omd*wt(i)
         and so on...
      Small orbital moment 0.27 for COO. Why...


032h8  packed at 19May2006
      *  rdata4gw ECORE:format change. because nrofi can be more than 4 digits.
      *  rprod(:,:) is explicitly allocated.
         (to supress ulimit error---but it is better to use unlimited stacksize )
         Miyake had trouble due to memory allocation.
      * BUGFIX: TimeReversaloff W(iw) /=W(-iw).
        I needed some points of fixing for TimeReversal off mode.
        Previous versions are completely wrong for TimeReversal off case.
 

032h7
       23Apr2006
      *AnyQ is added.
       If AnyQ on, you can put any q point in the <QPNT> block.

032h6  20Apr2006
       [ Add ScaledGapX0.
         E.g. if you put ScaledGapX0 0.8,
         (e_unocc-e_occ) is replaced by (e_unocc-e_occ - 0.8*MinimumBandGap)
         only when you calculate W.
          (the excitation energy is reduced a little).
         With this method, mimic exicitonic effects ] 
      ===> Mark says this will not work. 
        (this method break sum rule; but from the begining, sum rule is not satisfied 
         by non-local potential like QPscGW). See PRB54,2480


       efrgan2 --->errgan3.
       EFERMI contains bandgap now.

032h5  9Apr2006
       cleaned.

032h4_6 is a slightly confused...
       (diffrence is between saguaro and ellery. It 
       containes bug (or forgot to remove) noQ0P in x0kf_v2h.F (check lx0 contains warning or not).

032h4_5fixed 
     contained noQ0Ptest... Careful!

032h4_5 9Mar2006
     *minor clean up. 
     *heftet stops correctly when metal and Chi_RegQbz=off 
      (in previous version. it stoped with error: but this change gives no computational change, 
       nor bugfix).
      I am sloppy about heftet, so I did not implimented metal case for Chi_RegQbz=off

     * --novxc is added for lmfgw for eps modes 
       (this is not to generate vxc.* evec.*: March2006 lm6.15's lmfgw support this surpess).

032h4_3 4Mar2006
     *BUGFIX rswvwwk00_4 (nctot/=0 case) for 032h4

032h4_2 4Mar2006
     * BUGFIX for 032h4 nbnb( , jpm) 
     * BUGFIX for 032h4 psicb_v3. core indexing wrong. 

032h4 feb2006
     * Added "TimeReversal off" (default is on) for gw_lmfh mode.
       I did minimum check for gw_lmfh and gwsc.
       For eps mode (eps and eps_chipm), I am not so sure yet.

     * nw_i introcuded. meaning of nw is a little changes.
       freqr(nwp) (nw=nw+1, nw_i=0) ---> freq(0:nw), even when TimeReversal=on.
       In Timereversal=off freqr(nw_i:nw) in hsfp0.m.f hsfp0.sc.m.f

     *  if(kr/=0) qbz_kr= qbz (:,kr) !feb2006 L477 sxcf_fal2.sc.F
                                  This is just to override -Mbounds. (no effects for how to work).

     *  if(nctot==0) then
               deallocate(ecore)
               allocate(ecore(1,1)) !this is dummry
            endif   
        are added just to override -Mbounds.


---------------------------------------------
*** installation to iffk *** log installaino with ifc
  bugfix fac2lx(100) ---> fac2lx(101): in basnfp.F
         this can be a little dangeous (maybe no problem)
  Other changes just (to supress noisy bound check)
        phi(2) --->phi(lmax+1) in bessl in basnfp.F
        ebf(1:4) --->ebf(1:8) for inttetra6

  print *,smbasis()   
  print *,Gausssmear()  caused problem. This may be ifort's bug.
  ulimit -s unlimited 
  noisy warnings is due to /check:all option.
-----------------------------------------------------


032h3toh4_2
     This is somehow stable version.


032h3toh4_1
     Bugfix: not deallocate(hh,oo,zz,eb,oox,zzr) in hvccfp0 (move into outside of if loop).

032h3 1Feb2006
      Use sergey's q0iwgt3.F It can reduce number of rotation.

032h2 30jan2006

032h1toh2 30jan-2006
     bugfix basnfp
           absqg2x(ix) =sum( (2*pi/alat *q0i(1:3,i))**2) !bug 30jan2005 <--- q0i(q:3,nq0i)
     lcutmx is effective for epsPP mode

032h1toh2 jan11-2006
    * <PBASMAX> added. Gives maximum numbers for pbas for each l and atom
      usage: 
      <PBASMAX>
       1  5 5 5 3 3
       2  5 5 3 2 3
       3  3 3 2 2 2
      </PBASMAX>
    * BUGFIX hefter.m.f mode=1---> nsp was used before defined.
    * BUGFIX for mode222,  ngb was not setted (a while ago, I assumed ngb is from hvccfp0---it cause problem for mode222)
             even for mode223, it caused a problem  
032h1 
    * Jan-10 2006 remove symmetrization for zsec (im-axis integration part) because it is not necessary
      (it is done in hqpe_sc.F). This procedure makes zsec welll-defined---
      zsec is now  <i|Re[S](e_i)|j>. 
      Note that this is not hermitian becasuse e_i included.


032f8tof9 
    * Jan-4 2006 BUGFIX Fermi energy Finder "heftet.m.F (mode=2,3,4)" it was in 032f5 to 032f8.


032f8 Jan-3-2006
   * BUGFIX: for eps nolfc mode.
     x0kf_v2h.f ncutlow ncutlowto was not working for nolfco.
     Insert lines statring from  if( n1b(ibib,k) <= nbcut.and. n2b(ibib,k)>nbcut2) then for nolfco section.

   * set qreduce()=.true. now ---> this is temporary.!!!!!
     (this looks ok even for standard mode---but I may need check more...)

   * skip not to generate unused q point in mkqg for eps mode (bzcase=2).
     A little simplified q point generator mkqg.F

    mkqg.f:371    bzcase==2 ---> bzcase()==2   Nov04

    pomat: new smooth augmented basis for product.

  * echo 4 |hsfp0 mode modified. 
   
  * Added 
    QPNT_nbandrange 1 38
    This overide setting in QPNT.

  * util/dossig.F in order to calculate spectrum dos from SEComg.UP and DN.

  * Smoothed Mixed basis (PB + Augmented plane wave) for W and v.
     Use Keyword smbasis in GWinput
     Use "smbais #number".
     #number is maximum l for augmentation.
     --- this is smbasis_case=1(default) See switch.f--- 
     1. Add r^l and r^(l+2) for augmentation for l
     2.  two degree of freedom for each l is used to augment IPW.
     --- check the number of ngb in lsc and so.

     [ smbasis_case = 2
        For l augmentation, we use
        (1) If we have two or more than two radial basis for each l, 
            we use its two basis for the aumentation of the PW.
        (2) If th number of basis about high l channel nxxx(lx) 
            did not have less than two basis,
             i. nxxx(lx)=1 case: we add r^l             for augmentation  
            ii. nxxx(lx)=0 case: we add r^l and r^(l+2) for augmentation ] 


032f7
  Sep-27 2005

032f5
  Aug 17 2005
   * eps_lmf_chipm epsPP_lmf_chipm modes can give wrong (opposite sign of) contribution of imaginary part for small eps.
       This is because safer setting of eps=1d-3 in function intttvc2(omg,v).
       So be careful! I recommend to use eps_lmfh mode.

   * Because of the rapid change of the numerator (matrix elements), teterahedron scheme can give some strange spectrum
     ---then you need to use larger k mesh.

   * Close ChiPM* EPS* files in hx0fp0.m.f
   * remove qreduce() and add echo 1 (skip qibz for PPOVL) in rdata4gw_v2---this is for eps mode.

   * Q points are readin from <QforEPS> and <QforEPSL> for eps mode.
     We may need to calculate very minimum eigenfuncions only on regular 
     mesh if we calculate q points for regular mesh.
   * BUGFIX for keyvalue.f to exit without error to readin <QforEPS> and <QforEPSL>.
   * plot script plsp_ni plsp_fe --- modify and use it!
   * util/chipmdat.f should be compiled and copied to your bin to use plsp_fe and so.

   * Q0P has iq0in, which is to specify qg4gw is invoked.
     If iq0in=2, rdata4gw calculate PPOVL only for iq>nqibz.

   *epsPP_lmfh_chipm_q is added.
    This is to calcualte <exp (iqr)| chi^+- | exp (iqr)>
    See mode 10222 for hx0fp0.
    You must set isp=1 for majority. If it is difficult to set it as it is, 
    set variable schi=-1 in hx0fp0.

032f4 28July
   *Add util/chipmdat.f, plsp_e to extrapolate data.

---------------------------
032f3  27July2005
  * BUGFIX
      epsPP_lmf_chipm mode: x0kf--not cycle even for larger un occupied state.
      gwsc x0kf_v2h (isf was not passed)

---------------------------
032f  25July2005
  * I prepared all eps mode as
    epsA_B_C
    A: = PP or nothing PP means without LFC
    B: =lmfh or lmf . lmfh is histgram mode by sergey.
   _C: =chipm or nothig. chipm is for chi_+- mode. 
    So we now have eight eps mode . See hx0fp0.m.f 

    We now use dpsion3.

---------------------------
032d --- 4July2005
  * eps_lmfh: eps mode with Sergey's.
    So we now have epsPP_lmf 
                 epsPP_lmfh
                 eps_lmf
                 eps_lmfh
     I did minimum check for eps_lmfh.

  * chipm mode's (eps_lmf_chipm epsPP_lmf_chipm) are testing.  

  * Vesion's are shown at the top of console output. Or by echo -9999 | hx0fp0
    and so without changing anyfiles.

  * nband_sigm, and also emax_sigm take two arguments.
          1st: to determine max of i (and j) of <i|sigma|j>.
               This affects only sc calculation.
          2nd: cutoff for number of used bands in G in the calcualtion of G \times W in hsfp0.
         (You have to supply 1st argument as dummy when you do 1shot GW with this cutoff).

----------------------------
032e ---4july2005
  * BUGFIX :getnemx8 in extension.f
      It did not read nband_sigm if you supply 1st number only.

----------------------------
032f-developing
  * BUGFIX for eps_lmf mode---> hx0fp0: nwp in allocate(epsi(nwp)) was not defined.
  * BUGFIX den(1,1:2) is not zero-cleared in basnfp.f (for eps_chi_pm mode)
